{"ast":null,"code":"var _jsxFileName = \"/Users/Music_Studio/Development/MyProjects/BlueRica/store_front/src/components/ProductCard.js\";\nimport React from 'react';\nimport { Form, Modal, Header, Button, Card, Image } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nclass ProductCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quantity: \"0\",\n      open: false\n    };\n\n    this.changeQuantity = value => {\n      this.setState({\n        quantity: value.target.innerText\n      });\n    };\n\n    this.addCart = product => {\n      this.props.addToCart(product);\n      setTimeout(() => {\n        this.openModal();\n      }, 590);\n    };\n\n    this.openModal = () => {\n      this.setState(prevState => {\n        return {\n          open: !prevState.open\n        };\n      });\n    };\n  }\n\n  render() {\n    //   const style = {\n    //   borderRadius: 0,\n    //   opacity: 0.7,\n    //   padding: '2em',\n    // }\n    // const options = [\n    //   { key: '1', text: '1', value: '1'},\n    //   { key: '2', text: '2', value: '2'},\n    //   { key: '3', text: '3', value: '3'},\n    //   { key: '4', text: '4', value: '4'},\n    //   { key: '5', text: '5', value: '5'},\n    // ]\n    const product = this.props.product;\n    const open = this.state.open;\n    return React.createElement(Card, {\n      link: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: product.image,\n      wrapped: true,\n      ui: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Card.Content, {\n      style: {\n        \"background-color\": \"rgb(187,68,48)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, product.name), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"$\", product.price)), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, product.description)), React.createElement(Modal, {\n      open: open,\n      dimmer: \"inverted\",\n      trigger: React.createElement(Button, {\n        style: {\n          \"background-color\": \"rgba(187,68,48,0.2)\"\n        },\n        onClick: () => this.openModal(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Show More\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      style: {\n        \"background-color\": \"brown\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Add to cart\"), React.createElement(Modal.Content, {\n      image: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Image, {\n      wrapped: true,\n      size: \"medium\",\n      src: product.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, product.name, \" 20g\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, product.description), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"$\", product.price), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Form.Button, {\n      style: {\n        \"background-color\": \"rgba(187,68,48,0.2)\"\n      },\n      onClick: () => this.addCart(product),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Add to cart\"))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: item => {\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: item\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ProductCard);","map":{"version":3,"sources":["/Users/Music_Studio/Development/MyProjects/BlueRica/store_front/src/components/ProductCard.js"],"names":["React","Form","Modal","Header","Button","Card","Image","connect","ProductCard","Component","state","quantity","open","changeQuantity","value","setState","target","innerText","addCart","product","props","addToCart","setTimeout","openModal","prevState","render","image","name","price","description","mapDispatchToProps","dispatch","item","type","payload"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Modal, Header, Button, Card, Image, } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\n\nclass ProductCard extends React.Component {\n\n\nstate = {\nquantity: \"0\",\nopen: false,\n}\n\nchangeQuantity=(value)=> {\nthis.setState({\n  quantity: value.target.innerText\n})\n}\n\naddCart=(product)=> {\n\nthis.props.addToCart(product)\n\nsetTimeout(() => {\n  this.openModal();\n}, 590);\n\n}\nopenModal=()=> {\n  this.setState(prevState=>{\n    return{\n      open: !prevState.open\n    }\n  })\n}\nrender () {\n//   const style = {\n//   borderRadius: 0,\n//   opacity: 0.7,\n//   padding: '2em',\n// }\n// const options = [\n//   { key: '1', text: '1', value: '1'},\n//   { key: '2', text: '2', value: '2'},\n//   { key: '3', text: '3', value: '3'},\n//   { key: '4', text: '4', value: '4'},\n//   { key: '5', text: '5', value: '5'},\n// ]\nconst { product } = this.props\nconst { open } = this.state\n\treturn (\n\t<Card link>\n  <Image src={product.image} wrapped ui={false} />\n\t <Card.Content style={{\"background-color\": \"rgb(187,68,48)\"}}>\n\n      <Card.Header>{product.name}</Card.Header>\n      <Card.Meta>\n        <span className='date'>${product.price}</span>\n      </Card.Meta>\n      <Card.Description>\n        {product.description}\n      </Card.Description>\n     \n    </Card.Content>\n     <Modal open={open}dimmer=\"inverted\"trigger={<Button style={{\"background-color\": \"rgba(187,68,48,0.2)\"}} onClick={()=>this.openModal()}>Show More</Button>}>\n    <Modal.Header style={{\"background-color\": \"brown\"}} >Add to cart</Modal.Header>\n    <Modal.Content image >\n      <Image wrapped size='medium' src={product.image} />\n      <Modal.Description >\n        <Header>{product.name} 20g</Header>\n        <p>{product.description}</p>\n        <p>${product.price}</p>\n        <Form>\n        <Form.Button style={{\"background-color\": \"rgba(187,68,48,0.2)\"}} onClick={()=>this.addCart(product)}>Add to cart</Form.Button></Form>\n      </Modal.Description>\n    </Modal.Content>\n  </Modal>\n\t</Card>\n\t)\n}\n}\nconst mapDispatchToProps = dispatch => {\n return {\n        addToCart: (item)=> {\n              dispatch({type:\"ADD_TO_CART\", payload:item})\n                          },\n        }\n      }\n\nexport default connect(null ,mapDispatchToProps)(ProductCard);"]},"metadata":{},"sourceType":"module"}