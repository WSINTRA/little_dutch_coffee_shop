{"ast":null,"code":"import _defineProperty from \"/Users/Music_Studio/Development/MyProjects/store_analytic_project_FE-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Music_Studio/Development/MyProjects/store_analytic_project_FE-master/src/components/BarChart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// PlayGround for data\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst DataWork = props => {\n  // var today = new Date();\n  const dateConversion = date => {\n    var event = new Date(date);\n    return event.toDateString();\n  };\n\n  const hourConversion = date => {\n    var event = new Date(date);\n    return event.getHours();\n  };\n\n  const allDatesToToday = orders => {\n    var today = new Date().toDateString();\n    let todaysOrders = [];\n    orders.forEach(order => {\n      if (dateConversion(order.created_at) === today) {\n        todaysOrders.push(_objectSpread({}, order));\n      }\n    });\n    return allOrdersByTheHour(todaysOrders);\n  }; //This function will return all of the days orders\n\n\n  const allOrdersByTheHour = todaysOrders => {\n    const dailyData = [{\n      name: '0',\n      sph: 0\n    }, {\n      name: '1',\n      sph: 0\n    }, {\n      name: '2',\n      sph: 0\n    }, {\n      name: '3',\n      sph: 0\n    }, {\n      name: '4',\n      sph: 0\n    }, {\n      name: '5',\n      sph: 0\n    }, {\n      name: '6',\n      sph: 0\n    }, {\n      name: '7',\n      sph: 0\n    }, {\n      name: '8',\n      sph: 0\n    }, {\n      name: '9',\n      sph: 0\n    }, {\n      name: '10',\n      sph: 0\n    }, {\n      name: '11',\n      sph: 0\n    }, {\n      name: '12',\n      sph: 0\n    }, {\n      name: '13',\n      sph: 0\n    }, {\n      name: '14',\n      sph: 0\n    }, {\n      name: '15',\n      sph: 0\n    }, {\n      name: '16',\n      sph: 0\n    }, {\n      name: '17',\n      sph: 0\n    }, {\n      name: '18',\n      sph: 0\n    }, {\n      name: '19',\n      sph: 0\n    }, {\n      name: '20',\n      sph: 0\n    }, {\n      name: '21',\n      sph: 0\n    }, {\n      name: '22',\n      sph: 0\n    }, {\n      name: '23',\n      sph: 0\n    }];\n    let hourCount = [];\n    let data = {};\n    props.allTodaysSales(todaysOrders); //Passes the daily orders to redux\n\n    todaysOrders.forEach(order => {\n      hourCount.push(hourConversion(order.created_at));\n    });\n\n    for (var i = 0; i < hourCount.length; i++) {\n      var num = hourCount[i];\n      data[num] = data[num] ? data[num] + 1 : 1; //Sorts the sales by the hour into an object\n    }\n\n    dailyData.forEach(hour => {\n      if (data[hour.name]) {\n        hour.sph = data[hour.name];\n      }\n    }); //Creates an object counts that has the frequency of sales in each hour.\n\n    return dailyData;\n  }; // let event = dateConversion(props.orders[0].created_at)\n\n\n  function CustomTooltip({\n    orders,\n    payload,\n    label,\n    active\n  }) {\n    if (active) {\n      return React.createElement(\"div\", {\n        className: \"custom-tooltip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, payload[0].value, \" Sale/s\"), React.createElement(\"p\", {\n        className: \"intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }));\n    }\n\n    return null;\n  }\n\n  return React.createElement(BarChart, {\n    width: 700,\n    height: 500,\n    data: allDatesToToday(props.orders),\n    margin: {\n      top: 20,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    yAxisId: \"left\",\n    orientation: \"left\",\n    stroke: \"#8884d8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    content: React.createElement(CustomTooltip, {\n      orders: props.orders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    yAxisId: \"left\",\n    dataKey: \"sph\",\n    fill: \"#8884d8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }));\n};\n\nconst mdp = dispatch => {\n  return {\n    allTodaysSales: item => {\n      dispatch({\n        type: \"DAILY_SALES\",\n        payload: item\n      });\n    }\n  };\n};\n\nexport default connect(null, mdp)(DataWork);","map":{"version":3,"sources":["/Users/Music_Studio/Development/MyProjects/store_analytic_project_FE-master/src/components/BarChart.js"],"names":["React","connect","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","DataWork","props","dateConversion","date","event","Date","toDateString","hourConversion","getHours","allDatesToToday","orders","today","todaysOrders","forEach","order","created_at","push","allOrdersByTheHour","dailyData","name","sph","hourCount","data","allTodaysSales","i","length","num","hour","CustomTooltip","payload","label","active","value","top","right","left","bottom","mdp","dispatch","item","type"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,EACYC,GADZ,EACiBC,KADjB,EACwBC,KADxB,EAC+BC,aAD/B,EAC8CC,OAD9C,EACuDC,MADvD,QAEO,UAFP;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC5B;AACA,QAAMC,cAAc,GAAEC,IAAD,IAAS;AAC9B,QAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAZ;AACA,WAAOC,KAAK,CAACE,YAAN,EAAP;AACG,GAHH;;AAKA,QAAMC,cAAc,GAAEJ,IAAD,IAAS;AAC9B,QAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAZ;AACA,WAAOC,KAAK,CAACI,QAAN,EAAP;AACG,GAHH;;AAMA,QAAMC,eAAe,GAAEC,MAAD,IAAW;AAC/B,QAAIC,KAAK,GAAG,IAAIN,IAAJ,GAAWC,YAAX,EAAZ;AACA,QAAIM,YAAY,GAAG,EAAnB;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAgBC,KAAD,IAAU;AACvB,UAAIZ,cAAc,CAACY,KAAK,CAACC,UAAP,CAAd,KAAqCJ,KAAzC,EAAgD;AAC9CC,QAAAA,YAAY,CAACI,IAAb,mBAAsBF,KAAtB;AACC;AACC,KAJN;AAOA,WAAOG,kBAAkB,CAACL,YAAD,CAAzB;AAED,GAZD,CAb4B,CAyB3B;;;AACD,QAAMK,kBAAkB,GAAEL,YAAD,IAAiB;AACxC,UAAMM,SAAS,GAAG,CAClB;AACEC,MAAAA,IAAI,EAAE,GADR;AACaC,MAAAA,GAAG,EAAE;AADlB,KADkB,EAIlB;AACED,MAAAA,IAAI,EAAE,GADR;AACaC,MAAAA,GAAG,EAAE;AADlB,KAJkB,EAOlB;AACED,MAAAA,IAAI,EAAE,GADR;AACaC,MAAAA,GAAG,EAAE;AADlB,KAPkB,EAUlB;AACED,MAAAA,IAAI,EAAE,GADR;AACaC,MAAAA,GAAG,EAAE;AADlB,KAVkB,EAalB;AACED,MAAAA,IAAI,EAAE,GADR;AACaC,MAAAA,GAAG,EAAE;AADlB,KAbkB,EAgBlB;AACED,MAAAA,IAAI,EAAE,GADR;AACaC,MAAAA,GAAG,EAAE;AADlB,KAhBkB,EAmBlB;AACED,MAAAA,IAAI,EAAE,GADR;AACaC,MAAAA,GAAG,EAAE;AADlB,KAnBkB,EAsBjB;AACCD,MAAAA,IAAI,EAAE,GADP;AACYC,MAAAA,GAAG,EAAE;AADjB,KAtBiB,EAyBjB;AACCD,MAAAA,IAAI,EAAE,GADP;AACYC,MAAAA,GAAG,EAAE;AADjB,KAzBiB,EA4BjB;AACCD,MAAAA,IAAI,EAAE,GADP;AACYC,MAAAA,GAAG,EAAE;AADjB,KA5BiB,EA+BjB;AACCD,MAAAA,IAAI,EAAE,IADP;AACaC,MAAAA,GAAG,EAAE;AADlB,KA/BiB,EAkCjB;AACCD,MAAAA,IAAI,EAAE,IADP;AACaC,MAAAA,GAAG,EAAE;AADlB,KAlCiB,EAqCjB;AACCD,MAAAA,IAAI,EAAE,IADP;AACaC,MAAAA,GAAG,EAAE;AADlB,KArCiB,EAuChB;AACAD,MAAAA,IAAI,EAAE,IADN;AACYC,MAAAA,GAAG,EAAE;AADjB,KAvCgB,EA0ClB;AACED,MAAAA,IAAI,EAAE,IADR;AACcC,MAAAA,GAAG,EAAE;AADnB,KA1CkB,EA6ClB;AACED,MAAAA,IAAI,EAAE,IADR;AACcC,MAAAA,GAAG,EAAE;AADnB,KA7CkB,EAgDlB;AACED,MAAAA,IAAI,EAAE,IADR;AACcC,MAAAA,GAAG,EAAE;AADnB,KAhDkB,EAmDlB;AACED,MAAAA,IAAI,EAAE,IADR;AACcC,MAAAA,GAAG,EAAE;AADnB,KAnDkB,EAsDlB;AACED,MAAAA,IAAI,EAAE,IADR;AACcC,MAAAA,GAAG,EAAE;AADnB,KAtDkB,EAyDlB;AACED,MAAAA,IAAI,EAAE,IADR;AACcC,MAAAA,GAAG,EAAE;AADnB,KAzDkB,EA4DjB;AACCD,MAAAA,IAAI,EAAE,IADP;AACaC,MAAAA,GAAG,EAAE;AADlB,KA5DiB,EA+DjB;AACCD,MAAAA,IAAI,EAAE,IADP;AACaC,MAAAA,GAAG,EAAE;AADlB,KA/DiB,EAkEjB;AACCD,MAAAA,IAAI,EAAE,IADP;AACaC,MAAAA,GAAG,EAAE;AADlB,KAlEiB,EAqEjB;AACCD,MAAAA,IAAI,EAAE,IADP;AACaC,MAAAA,GAAG,EAAE;AADlB,KArEiB,CAAlB;AAyEA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,IAAI,GAAG,EAAX;AAEArB,IAAAA,KAAK,CAACsB,cAAN,CAAqBX,YAArB,EA7EwC,CA6EJ;;AACpCA,IAAAA,YAAY,CAACC,OAAb,CAAsBC,KAAD,IAAU;AAC7BO,MAAAA,SAAS,CAACL,IAAV,CAAeT,cAAc,CAACO,KAAK,CAACC,UAAP,CAA7B;AACD,KAFD;;AAGA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAIE,GAAG,GAAGL,SAAS,CAACG,CAAD,CAAnB;AACAF,MAAAA,IAAI,CAACI,GAAD,CAAJ,GAAYJ,IAAI,CAACI,GAAD,CAAJ,GAAYJ,IAAI,CAACI,GAAD,CAAJ,GAAY,CAAxB,GAA4B,CAAxC,CAFyC,CAEC;AACzC;;AAEDR,IAAAA,SAAS,CAACL,OAAV,CAAmBc,IAAD,IAAS;AACzB,UAAIL,IAAI,CAACK,IAAI,CAACR,IAAN,CAAR,EAAqB;AACnBQ,QAAAA,IAAI,CAACP,GAAL,GAAWE,IAAI,CAACK,IAAI,CAACR,IAAN,CAAf;AACD;AACF,KAJD,EAtFsC,CA2FxC;;AACE,WAAOD,SAAP;AACH,GA7FD,CA1B4B,CAwH5B;;;AACA,WAASU,aAAT,CAAuB;AAAElB,IAAAA,MAAF;AAAUmB,IAAAA,OAAV;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,GAAvB,EAA2D;AAEzD,QAAIA,MAAJ,EAAY;AACV,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBF,OAAO,CAAC,CAAD,CAAP,CAAWG,KAAjC,YADF,EAEE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;AAED,WAAO,IAAP;AACD;;AACD,SAEM,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEvB,eAAe,CAACR,KAAK,CAACS,MAAP,CAHvB;AAIE,IAAA,MAAM,EAAE;AACNuB,MAAAA,GAAG,EAAE,EADC;AACGC,MAAAA,KAAK,EAAE,EADV;AACcC,MAAAA,IAAI,EAAE,EADpB;AACwBC,MAAAA,MAAM,EAAE;AADhC,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAsB,IAAA,WAAW,EAAC,MAAlC;AAAyC,IAAA,MAAM,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAGnC,KAAK,CAACS,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAC,KAA5B;AAAkC,IAAA,IAAI,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAFN;AAkBC,CAzJD;;AA2JA,MAAM2B,GAAG,GAAGC,QAAQ,IAAI;AACtB,SAAO;AACLf,IAAAA,cAAc,EAAGgB,IAAD,IAAS;AACxBD,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAC,aAAN;AAAqBX,QAAAA,OAAO,EAACU;AAA7B,OAAD,CAAR;AACA;AAHI,GAAP;AAKD,CAND;;AASA,eAAe/C,OAAO,CAAC,IAAD,EAAO6C,GAAP,CAAP,CAAmBrC,QAAnB,CAAf","sourcesContent":["// PlayGround for data\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nconst DataWork = (props) => {\n// var today = new Date();\nconst dateConversion=(date)=> {\nvar event = new Date(date);\nreturn event.toDateString()\n  }\n\nconst hourConversion=(date)=> {\nvar event = new Date(date);\nreturn event.getHours()\n  }\n\n\nconst allDatesToToday=(orders)=> {\n  var today = new Date().toDateString()\n  let todaysOrders = []\n  orders.forEach((order)=> {\n    if (dateConversion(order.created_at) === today) {\n      todaysOrders.push({...order})\n      }\n       }\n    )\n\n  return allOrdersByTheHour(todaysOrders)\n\n}//This function will return all of the days orders\nconst allOrdersByTheHour=(todaysOrders)=> {\n  const dailyData = [\n  {\n    name: '0', sph: 0, \n  },\n  {\n    name: '1', sph: 0, \n  },\n  {\n    name: '2', sph: 0, \n  },\n  {\n    name: '3', sph: 0, \n  },\n  {\n    name: '4', sph: 0, \n  },\n  {\n    name: '5', sph: 0, \n  },\n  {\n    name: '6', sph: 0,  \n  },\n   {\n    name: '7', sph: 0,  \n  },\n   {\n    name: '8', sph: 0, \n  },\n   {\n    name: '9', sph: 0,  \n  },\n   {\n    name: '10', sph: 0, \n  },\n   {\n    name: '11', sph: 0,  \n  },\n   {\n    name: '12', sph: 0,  \n  },{\n    name: '13', sph: 0, \n  },\n  {\n    name: '14', sph: 0, \n  },\n  {\n    name: '15', sph: 0, \n  },\n  {\n    name: '16', sph: 0, \n  },\n  {\n    name: '17', sph: 0, \n  },\n  {\n    name: '18', sph: 0, \n  },\n  {\n    name: '19', sph: 0,  \n  },\n   {\n    name: '20', sph: 0,  \n  },\n   {\n    name: '21', sph: 0, \n  },\n   {\n    name: '22', sph: 0,  \n  },\n   {\n    name: '23', sph: 0, \n  },\n];\n  let hourCount = []\n  let data = {}\n \n  props.allTodaysSales(todaysOrders); //Passes the daily orders to redux\n  todaysOrders.forEach((order)=> {\n    hourCount.push(hourConversion(order.created_at))\n  })\n  for (var i = 0; i < hourCount.length; i++) {\n    var num = hourCount[i];\n    data[num] = data[num] ? data[num] + 1 : 1;//Sorts the sales by the hour into an object\n    }\n    \n    dailyData.forEach((hour)=> {\n      if (data[hour.name]) {\n        hour.sph = data[hour.name]\n      }\n    })\n  //Creates an object counts that has the frequency of sales in each hour.\n    return dailyData\n}\n// let event = dateConversion(props.orders[0].created_at)\nfunction CustomTooltip({ orders, payload, label, active }) {\n\n  if (active) {\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\">{payload[0].value} Sale/s</p>\n        <p className=\"intro\"></p>\n        <p className=\"desc\"></p>\n      </div>\n    );\n  }\n\n  return null;\n}\nreturn (\n\n      <BarChart\n        width={700}\n        height={500}\n        data={allDatesToToday(props.orders)}\n        margin={{\n          top: 20, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\n        <Tooltip content={<CustomTooltip orders={(props.orders)}/>}/>\n        <Legend />\n        <Bar yAxisId=\"left\" dataKey=\"sph\" fill=\"#8884d8\" />\n      </BarChart>\n    );\n}\n\nconst mdp = dispatch => {\n  return {\n    allTodaysSales: (item)=> {\n    \tdispatch({type:\"DAILY_SALES\", payload:item})\n    }\n  }\n}\n\n\nexport default connect(null, mdp)(DataWork);"]},"metadata":{},"sourceType":"module"}