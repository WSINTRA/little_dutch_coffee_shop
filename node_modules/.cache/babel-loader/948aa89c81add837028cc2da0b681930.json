{"ast":null,"code":"var _jsxFileName = \"/Users/Music_Studio/Development/MyProjects/store_analytic_project_FE-master/src/components/PieChart.js\";\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { PieChart, Pie, Cell, Tooltip } from 'recharts';\nimport { Label } from 'semantic-ui-react'; //////////////////\n\nclass RenPieChart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      lineDataObject: []\n    };\n\n    this.checkTotal = () => {\n      this.setState({\n        lineDataObject: this.props.dailyData\n      });\n    };\n  }\n\n  render() {\n    // const testObject = [...this.props.dailyData]\n    //////////////////\n    const COLORS = ['Blue', 'Teal', 'red', 'orange', 'olive', 'green', 'purple'];\n    const RADIAN = Math.PI / 180;\n\n    const renderCustomizedLabel = ({\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      percent,\n      index\n    }) => {\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      return React.createElement(\"text\", {\n        x: x,\n        y: y,\n        fill: \"white\",\n        textAnchor: x > cx ? 'start' : 'end',\n        dominantBaseline: \"central\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"\".concat((percent * 100).toFixed(0), \"%\"));\n    };\n\n    const lineDataObject = this.state.lineDataObject;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.checkTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \" Check total \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Label, {\n      as: \"a\",\n      color: \"purple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"2019\"), React.createElement(Label, {\n      as: \"a\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Amsterdams Finest\"), React.createElement(Label, {\n      as: \"a\",\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"New Strains\"), React.createElement(Label, {\n      as: \"a\",\n      color: \"olive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Homegrown\"), React.createElement(Label, {\n      as: \"a\",\n      color: \"teal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Brooklyn Baby\"), React.createElement(Label, {\n      as: \"a\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Cali Cup\"), React.createElement(Label, {\n      as: \"a\",\n      color: \"orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Canna Cup\")), React.createElement(PieChart, {\n      width: 400,\n      height: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Pie, {\n      data: lineDataObject,\n      cx: 200,\n      cy: 200,\n      labelLine: false,\n      label: renderCustomizedLabel,\n      outerRadius: 180,\n      fill: \"#8884d8\",\n      dataKey: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, lineDataObject.map((entry, index) => React.createElement(Cell, {\n      key: \"cell-\".concat(index),\n      fill: COLORS[index % COLORS.length],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst msp = state => {\n  return {\n    dailyData: state.dailyData\n  };\n};\n\nexport default connect(msp)(RenPieChart);","map":{"version":3,"sources":["/Users/Music_Studio/Development/MyProjects/store_analytic_project_FE-master/src/components/PieChart.js"],"names":["connect","React","PieChart","Pie","Cell","Tooltip","Label","RenPieChart","Component","state","loading","lineDataObject","checkTotal","setState","props","dailyData","render","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","map","entry","length","msp"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\nimport React from 'react';\nimport {\n  PieChart, Pie, Cell, Tooltip\n} from 'recharts';\nimport { Label } from 'semantic-ui-react'\n//////////////////\n\nclass RenPieChart extends React.Component {\n \n state = {\n  loading: true,\n  lineDataObject: [],\n }\n\n\ncheckTotal =()=>{\n  this.setState({\n    lineDataObject: this.props.dailyData\n  })\n}\n\nrender() {\n// const testObject = [...this.props.dailyData]\n\n\n//////////////////\n\n    const COLORS = ['Blue', 'Teal', 'red', 'orange', 'olive', 'green', 'purple'];\n\n    const RADIAN = Math.PI / 180;\n\n    const renderCustomizedLabel = ({\n      cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n    }) => {\n       const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n      return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n          {`${(percent * 100).toFixed(0)}%`}\n        </text>\n      );\n    };\n\n\nconst { lineDataObject } = this.state\n\n\n   return (\n  <React.Fragment>\n <button onClick={this.checkTotal}> Check total </button>\n   <div>\n   <Label as='a' color='purple'>\n      2019\n    </Label>\n    <Label as='a' color='blue'>\n      Amsterdams Finest\n    </Label>\n    <Label as='a' color='green' >\n     New Strains\n    </Label>\n    <Label as='a' color='olive' >\n     Homegrown\n    </Label>\n    <Label as='a' color='teal' >\n      Brooklyn Baby\n    </Label>\n    <Label as='a' color='red' >\n     Cali Cup\n    </Label>\n    <Label as='a' color='orange' >\n     Canna Cup\n    </Label>\n     \n    \n  </div>\n <PieChart width={400} height={400}>\n        <Pie\n          data={lineDataObject}\n          cx={200}\n          cy={200}\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={180}\n          fill=\"#8884d8\"\n          dataKey=\"total\"\n        >\n          {\n            lineDataObject.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n          }\n          <Tooltip />\n        </Pie>\n      </PieChart>\n       \n      </React.Fragment>\n    );\n }\n \n}\nconst msp = state => {\n    return { dailyData: state.dailyData\n     }\n}\n\nexport default connect(msp)(RenPieChart);\n\n\n"]},"metadata":{},"sourceType":"module"}